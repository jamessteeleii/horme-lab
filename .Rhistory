x = expression("IRT Estimated Effort (load"[transf]~"/1RM"[transf]~"; %)")) +
theme_classic()
comb_effort_p
comb_effort <- comb_effort %>%
mutate(theta_to_raw = fixef(lm_1RM)[1,1] + (fixef(lm_1RM)[2,1]*theta),
beta_to_raw = fixef(lm_loads)[1,1] + (fixef(lm_loads)[2,1]*beta),
irt_effort = if_else(theta_to_raw >= beta_to_raw, beta_to_raw/theta_to_raw*100, 100))
library(tidyverse)
library(faux)
library(lme4)
library(brms)
library(patchwork)
data.frame(beta=0,
alpha=1,
gamma=0.1,
psi=0.1
) %>%
tidyr::expand(nesting(beta,
alpha,
gamma,
psi
),
theta = seq(from = -6, to = 6, length.out = 200)) %>%
mutate(p = gamma + (1-gamma-psi) * brms::inv_logit_scaled(exp(alpha)*theta-beta)) %>%
ggplot(aes(x = theta, y = p)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(title = "ICC for the 4PL",
subtitle = expression(beta~"=0,"~alpha~"=1,"~gamma~"=0.1,"~psi~"=0.1"),
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10))
data.frame(beta=0,
alpha=0,
gamma=0,
psi=0
) %>%
tidyr::expand(nesting(beta,
alpha,
gamma,
psi
),
theta = seq(from = -6, to = 6, length.out = 200)) %>%
mutate(p = gamma + (1-gamma-psi) * brms::inv_logit_scaled(exp(alpha)*theta-beta)) %>%
ggplot(aes(x = theta, y = p)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(title = "ICC for the 1PL",
subtitle = expression(beta~"=0,"~alpha~"=0,"~gamma~"=0,"~psi~"=0"),
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10))
oneRM_dat <- add_random(person = 100) %>%
add_ranef("person", one_RM = 25) %>%
add_within("person", item = seq(from = 10, to = 200, by=10)) %>%
mutate(person = as.factor(person),
item = as.numeric(item)*10,
one_RM = one_RM+100,
actual_effort = if_else(one_RM >= item, (item/one_RM)*100, 100),
response = if_else(one_RM >= item, 1, 0),
item = as.factor(item)
)
oneRM_dat %>%
filter(one_RM < 100) %>%
slice(1:10)
formula_1pl <- bf(
formula = response ~ 1 + (1 | item) + (1 | person),
family = brmsfamily("bernoulli", link = "logit")
)
prior_1pl <-
prior("normal(0, 2)", class = "Intercept") +
prior("normal(0, 3)", class = "sd", group = "person") +
prior("normal(0, 3)", class = "sd", group = "item")
fit_1pl <- brm(
formula = formula_1pl,
data = oneRM_dat,
prior = prior_1pl,
chains = 4,
iter = 3000, warmup = 1000,
cores = 4,
control = list(adapt_delta = 0.95), inits = 0
)
post <- posterior_samples(fit_1pl)
post <- post %>%
select(b_Intercept, starts_with("r_item")) %>%
mutate(iter = 1:n()) %>%
pivot_longer(starts_with("r_item"), names_to = "item", values_to = "xi") %>%
mutate(item = str_extract(item, "\\d+"))
post_icc <- post %>%
tidyr::expand(nesting(iter, b_Intercept, item, xi),
theta = seq(from = -10, to = 10, length.out = 500)) %>%
mutate(p = inv_logit_scaled(b_Intercept + xi + theta)) %>%
group_by(theta, item) %>%
summarise(p = mean(p)) %>%
mutate(item = factor(item, levels = c("10","20","30","40","50","60","70","80","90","100","110","120","130","140","150","160","170","180","190","200")))
icc_p <- post_icc %>%
ggplot(aes(x = theta, y = p, color = item)) +
geom_line() +
scale_color_viridis_d(option = "H") +
labs(title = "ICCs for the 1PL",
subtitle = "Each curve is based on the posterior mean.",
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10))
icc_p
icc_p <- post_icc %>%
ggplot(aes(x = theta, y = p, color = item)) +
geom_line() +
scale_color_viridis_d(option = "H") +
labs(title = "ICCs for the 1PL",
subtitle = "Each curve is based on the posterior mean.",
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 6),
legend.title = element_text(size=8))
icc_p
icc_p
icc_p
icc_p
icc_p
icc_p
icc_p
post_icc %>%
ggplot(aes(x = theta, y = p, color = item)) +
geom_line() +
scale_color_viridis_d(option = "H") +
labs(title = "ICCs for the 1PL",
subtitle = "Each curve is based on the posterior mean.",
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10)) +
guides(fill=guide_legend(ncol=2))
post_icc %>%
ggplot(aes(x = theta, y = p, color = item)) +
geom_line() +
scale_color_viridis_d(option = "H") +
labs(title = "ICCs for the 1PL",
subtitle = "Each curve is based on the posterior mean.",
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10)) +
guides(color=guide_legend(ncol=2))
rand <- ranef(fit_1pl)
rand_person <- data.frame(person = row.names(rand$person), rand$person)
rand_item <- as.data.frame(rand$item)
rand_item <- data.frame(beta = rep(rand_item$Estimate.Intercept, times = 100)) %>%
mutate(item = as.factor(rep(1:20, times=100)*10),
person = rep(rand_person$person, each=20)) %>%
select(person, item, beta)
rand_all <- left_join(rand_person, rand_item, by = "person") %>%
rename(
theta = "Estimate.Intercept") %>%
mutate(beta = beta*-1)
comb_effort <- left_join(rand_all, oneRM_dat, by = c("person", "item"))
scores_oneRM <- comb_effort %>%
group_by(person) %>%
filter(row_number()==1)
lm_1RM <- brm(one_RM ~ theta,
data = scores_oneRM,
seed = 1988)
loads <- comb_effort %>%
group_by(item) %>%
filter(row_number()==1) %>%
mutate(load = as.numeric(item)*10)
lm_loads <- brm(load ~ beta,
data = loads,
seed = 1988)
comb_effort <- comb_effort %>%
mutate(theta_to_raw = fixef(lm_1RM)[1,1] + (fixef(lm_1RM)[2,1]*theta),
beta_to_raw = fixef(lm_loads)[1,1] + (fixef(lm_loads)[2,1]*beta),
irt_effort = if_else(theta_to_raw >= beta_to_raw, beta_to_raw/theta_to_raw*100, 100))
comb_effort
comb_effort %>%
# data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
# add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
# stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_color_viridis_d(option = "H") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
y = expression("E"~[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
comb_effort %>%
# data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
# add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
# stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_color_viridis_d(option = "H") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"~[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
comb_effort %>%
# data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
# add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
# stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_color_viridis_d(option = "H") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly from 1RM and load; %)")) +
theme_classic()
comb_effort %>%
filter(item > 50) %>%
# data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
# add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
# stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point() +
# geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_color_viridis_d(option = "H") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
comb_effort %>%
filter(as.numeric(item) > 50) %>%
# data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
# add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
# stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point() +
# geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_color_viridis_d(option = "H") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
comb_effort %>%
mutate(item = as.numeric(item)) %>%
filter(item > 50) %>%
# data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
# add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
# stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point() +
# geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_color_viridis_d(option = "H") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
comb_effort %>%
mutate(item = as.numeric(item)) %>%
filter(item > 50)
comb_effort %>%
mutate(item = as.numeric(item))
comb_effort %>%
mutate(item = as.numeric(item)) %>%
filter(item > 5) %>%
# data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
# add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
# stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point() +
# geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_color_viridis_d(option = "H") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
comb_effort %>%
mutate(item = as.numeric(item)) %>%
filter(item <= 5) %>%
# data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
# add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
# stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point() +
# geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_color_viridis_d(option = "H") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
oneRM_dat
library(tidyverse)
library(faux)
library(lme4)
library(brms)
library(patchwork)
data.frame(beta=0,
alpha=1,
gamma=0.1,
psi=0.1
) %>%
tidyr::expand(nesting(beta,
alpha,
gamma,
psi
),
theta = seq(from = -6, to = 6, length.out = 200)) %>%
mutate(p = gamma + (1-gamma-psi) * brms::inv_logit_scaled(exp(alpha)*theta-beta)) %>%
ggplot(aes(x = theta, y = p)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(title = "ICC for the 4PL",
subtitle = expression(beta~"=0,"~alpha~"=1,"~gamma~"=0.1,"~psi~"=0.1"),
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10))
data.frame(beta=0,
alpha=0,
gamma=0,
psi=0
) %>%
tidyr::expand(nesting(beta,
alpha,
gamma,
psi
),
theta = seq(from = -6, to = 6, length.out = 200)) %>%
mutate(p = gamma + (1-gamma-psi) * brms::inv_logit_scaled(exp(alpha)*theta-beta)) %>%
ggplot(aes(x = theta, y = p)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(title = "ICC for the 1PL",
subtitle = expression(beta~"=0,"~alpha~"=0,"~gamma~"=0,"~psi~"=0"),
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10))
oneRM_dat <- add_random(person = 100) %>%
add_ranef("person", one_RM = 25) %>%
add_within("person", item = seq(from = 10, to = 200, by=10)) %>%
mutate(person = as.factor(person),
item = as.numeric(item)*10,
one_RM = one_RM+100,
actual_effort = if_else(one_RM >= item, (item/one_RM)*100, 100),
response = if_else(one_RM >= item, 1, 0),
item = as.factor(item)
)
oneRM_dat %>%
filter(one_RM < 100) %>%
slice(1:10)
formula_1pl <- bf(
formula = response ~ 1 + (1 | item) + (1 | person),
family = brmsfamily("bernoulli", link = "logit")
)
prior_1pl <-
prior("normal(0, 2)", class = "Intercept") +
prior("normal(0, 3)", class = "sd", group = "person") +
prior("normal(0, 3)", class = "sd", group = "item")
fit_1pl <- brm(
formula = formula_1pl,
data = oneRM_dat,
prior = prior_1pl,
chains = 4,
iter = 3000, warmup = 1000,
cores = 4,
control = list(adapt_delta = 0.95), inits = 0
)
post <- posterior_samples(fit_1pl)
post <- post %>%
select(b_Intercept, starts_with("r_item")) %>%
mutate(iter = 1:n()) %>%
pivot_longer(starts_with("r_item"), names_to = "item", values_to = "xi") %>%
mutate(item = str_extract(item, "\\d+"))
post_icc <- post %>%
tidyr::expand(nesting(iter, b_Intercept, item, xi),
theta = seq(from = -10, to = 10, length.out = 500)) %>%
mutate(p = inv_logit_scaled(b_Intercept + xi + theta)) %>%
group_by(theta, item) %>%
summarise(p = mean(p)) %>%
mutate(item = factor(item, levels = c("10","20","30","40","50","60","70","80","90","100","110","120","130","140","150","160","170","180","190","200")))
icc_p <- post_icc %>%
ggplot(aes(x = theta, y = p, color = item)) +
geom_line() +
scale_color_viridis_d(option = "H") +
labs(title = "ICCs for the 1PL",
subtitle = "Each curve is based on the posterior mean.",
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10)) +
guides(color=guide_legend(ncol=2))
icc_p
rand <- ranef(fit_1pl)
rand_person <- data.frame(person = row.names(rand$person), rand$person)
rand_item <- as.data.frame(rand$item)
rand_item <- data.frame(beta = rep(rand_item$Estimate.Intercept, times = 100)) %>%
mutate(item = as.factor(rep(1:20, times=100)*10),
person = rep(rand_person$person, each=20)) %>%
select(person, item, beta)
rand_all <- left_join(rand_person, rand_item, by = "person") %>%
rename(
theta = "Estimate.Intercept") %>%
mutate(beta = beta*-1)
comb_effort <- left_join(rand_all, oneRM_dat, by = c("person", "item"))
scores_oneRM <- comb_effort %>%
group_by(person) %>%
filter(row_number()==1)
lm_1RM <- brm(one_RM ~ theta,
data = scores_oneRM,
seed = 1988)
lm_1RM
loads <- comb_effort %>%
group_by(item) %>%
filter(row_number()==1) %>%
mutate(load = as.numeric(item)*10)
lm_loads <- brm(load ~ beta,
data = loads,
seed = 1988)
lm_loads
library(ggpubr)
library(tidybayes)
library(modelr)
theta_oneRM <- scores_oneRM %>%
group_by(person) %>%
filter(row_number()==1) %>%
data_grid(theta = seq_range(theta, 100)) %>%
add_epred_draws(lm_1RM) %>%
ggplot(aes(x = theta, y = one_RM)) +
stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point(data = scores_oneRM, size = 1, alpha = 0.8) +
labs(title = "1RM (kg) and Ability",
y = "1RM (kg)",
x = expression(theta~('ability on the logit scale'))) +
theme_classic()
beta_load <- loads %>%
data_grid(beta = seq_range(beta, 100)) %>%
add_epred_draws(lm_loads) %>%
ggplot(aes(x = beta, y = as.numeric(item)*10)) +
stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point(data = loads, size = 1, alpha = 0.8) +
labs(title = "Load (kg) and Item Difficulty",
y = "Load (kg)",
x = expression(beta~('difficulty on the logit scale'))) +
theme_classic()
theta_oneRM + beta_load
comb_effort <- comb_effort %>%
mutate(theta_to_raw = fixef(lm_1RM)[1,1] + (fixef(lm_1RM)[2,1]*theta),
beta_to_raw = fixef(lm_loads)[1,1] + (fixef(lm_loads)[2,1]*beta),
irt_effort = if_else(theta_to_raw >= beta_to_raw, beta_to_raw/theta_to_raw*100, 100))
comb_effort
lmm_effort <- brm(actual_effort ~ irt_effort + (irt_effort | person),
data = comb_effort,
seed = 1988)
comb_effort_p <- comb_effort %>%
data_grid(irt_effort = seq(from = 0, to = 100, by = 1), person) %>%
add_epred_draws(lmm_effort) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
stat_lineribbon(aes(y = .epred), size = 1, fill = "grey") +
geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
comb_effort_p
comb_effort_p_50 <- comb_effort %>%
mutate(item2 = as.numeric(item)) %>%
filter(item2 >= 50) %>%
ggplot(aes(x = irt_effort, y = actual_effort)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(data = comb_effort, aes(x = irt_effort, y = actual_effort), alpha = 0.5, size = 0.75) +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
x = expression("E"[A(ji,transf)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
comb_effort_p_50
