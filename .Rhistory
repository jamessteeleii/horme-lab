lwr = V2)
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
dat1 <- subset(dat, es < pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d &
es > -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d)
sum(dat$pval < 0.05)/1000
n_30 <- dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
# geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 400, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = -2, size = 2) +
annotate("text", 400, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 1.06, sample size = 30")
n_30
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
# geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 400, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = -1, size = 2) +
annotate("text", 400, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 1.06, sample size = 30")
pp_check(brm_SV_effort)
pp_check(brm_effort)
brm_effort
plot(brm_effort)
install.packages("ordbetareg")
## Setup
# run rstan quicker - for bayesian beta regression later on
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores()-1)
library(tidyverse)
library(tidyr)
library(faux)
library(lme4)
library(brms)
library(patchwork)
# function to convert the logits back to proportions/probabilities
# to convert the model coefs
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
## Let's show the example - '1RM' testing with IRT modelling
oneRM_dat <- add_random(person = 100) %>%
add_ranef("person", one_RM = 25) %>%
add_within("person", item = seq(from = 10, to = 200, by=10)) %>%
mutate(person = as.factor(person),
item = as.numeric(item)*10,
one_RM = one_RM+100,
actual_effort = if_else(one_RM >= item, (item/one_RM)*100, 100),
response = if_else(one_RM >= item, 1, 0),
item = as.factor(item)
)
formula_1pl <- bf(
formula = response ~ 1 + (1 | item) + (1 | person),
family = brmsfamily("bernoulli", link = "logit")
)
prior_1pl <-
prior("normal(0, 2)", class = "Intercept") +
prior("normal(0, 3)", class = "sd", group = "person") +
prior("normal(0, 3)", class = "sd", group = "item")
fit_1pl <- brm(
formula = formula_1pl,
data = oneRM_dat,
prior = prior_1pl,
chains = 4,
iter = 3000, warmup = 1000,
cores = 4,
control = list(adapt_delta = 0.95), inits = 0
)
post <- posterior_samples(fit_1pl)
post <- post %>%
select(b_Intercept, starts_with("r_item")) %>%
mutate(iter = 1:n()) %>%
pivot_longer(starts_with("r_item"), names_to = "item", values_to = "xi") %>%
mutate(item = str_extract(item, "\\d+"))
post_icc <- post %>%
tidyr::expand(nesting(iter, b_Intercept, item, xi),
theta = seq(from = -6, to = 6, length.out = 100)) %>%
mutate(p = inv_logit_scaled(b_Intercept + xi + theta)) %>%
group_by(theta, item) %>%
summarise(p = mean(p)) %>%
mutate(item = factor(item, levels = c("10","20","30","40","50","60","70","80","90","100","110","120","130","140","150","160","170","180","190","200")))
icc_p <- post_icc %>%
ggplot(aes(x = theta, y = p, color = item)) +
geom_line() +
scale_color_viridis_d(option = "H") +
labs(title = "ICCs for the 1PL",
subtitle = "Each curve is based on the posterior mean.",
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Load (kg)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10))
rand <- ranef(fit_1pl)
rand_person <- data.frame(person = row.names(rand$person), rand$person)
rand_item <- as.data.frame(rand$item)
rand_item <- data.frame(beta = rep(rand_item$Estimate.Intercept, times = 100)) %>%
mutate(item = as.factor(rep(1:20, times=100)*10),
person = rep(rand_person$person, each=20)) %>%
select(person, item, beta)
rand_all <- left_join(rand_person, rand_item, by = "person") %>%
rename(
theta = "Estimate.Intercept") %>%
mutate(beta = beta*-1)
comb_effort <- left_join(rand_all, oneRM_dat, by = c("person", "item"))
library(ggpubr)
theta_oneRM <- comb_effort %>%
group_by(person) %>%
filter(row_number()==1) %>%
ggplot(aes(x = theta, y = one_RM)) +
geom_point() +
geom_smooth(method = "lm", color = "black", fill = "grey") +
stat_regline_equation(label.x=7.5, label.y=-Inf, vjust=-5, size=3) +
labs(title = "1RM (kg) and Ability",
y = "1RM (kg)",
x = expression(theta~('ability on the logit scale'))) +
theme_classic()
scores_oneRM <- comb_effort %>%
group_by(person) %>%
filter(row_number()==1)
lm1RM <- lm(one_RM ~ theta,
data = scores_oneRM)
beta_load <- comb_effort %>%
group_by(item) %>%
filter(row_number()==1) %>%
ggplot(aes(x = beta, y = as.numeric(item)*10)) +
geom_point() +
geom_smooth(method = "lm", color = "black", fill = "grey") +
stat_regline_equation(label.x=0, label.y=-Inf, vjust=-5, size=3) +
labs(title = "Load (kg) and Item Difficulty",
y = "Load (kg)",
x = expression(beta~('difficulty on the logit scale'))) +
theme_classic()
loads <- comb_effort %>%
group_by(item) %>%
filter(row_number()==1) %>%
mutate(load = as.numeric(item)*10)
lm_loads<- lm(load ~ beta,
data = loads)
comb_effort <- comb_effort %>%
mutate(theta_to_raw = coef(lm1RM)[1] + (coef(lm1RM)[2]*theta),
beta_to_raw = coef(lm_loads)[1] + (coef(lm_loads)[2]*beta),
irt_effort = if_else(theta_to_raw >= beta_to_raw, beta_to_raw/theta_to_raw, 1),
p = inv_logit_scaled(theta - beta),
actual_effort = actual_effort/100)
ordbeta_effort <- ordbetareg::ordbetareg(actual_effort ~ irt_effort + (irt_effort | person),
data = comb_effort
)
plot(ordbeta_effort)
pp_check(ordbeta_effort)
library(tidybayes)
com_effort_p <- comb_effort %>%
# data_grid(irt_effort = seq(from = 0, to = 1, length = 101), person) %>%
tidyr::expand(nesting(person),
irt_effort = seq(from = 0, to = 100, length = 101)) %>%
add_epred_draws(ordbeta_effort) %>%
ggplot(aes(x = irt_effort*100, y = actual_effort*100)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
stat_lineribbon(aes(y = .epred*100), alpha = 0.8, .width = 0.95, fill = "grey") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "Actual Effort from Loads and IRT (1PL) Estimated Effort",
subtitle = expression(~italic(y)~" = (\u03b2"[0]~"+ u"[0]~") + (\u03b2"[1]~"+ u"[1]~") * x + \u03c3"),
y = expression("Actual Effort from Loads (load"[actual]~"/1RM"[actual]~"; %)"),
x = expression("IRT Estimated Effort (load"[transf]~"/1RM"[transf]~"; %)")) +
theme_classic()
com_effort_p
comb_effort_p
ordbeta_effort
comb_effort %>%
# data_grid(irt_effort = seq(from = 0, to = 1, length = 101), person) %>%
tidyr::expand(nesting(person),
irt_effort = seq(from = 0, to = 100, length = 101)) %>%
add_epred_draws(ordbeta_effort) %>%
ggplot(aes(x = irt_effort*100, y = actual_effort*100)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(aes(x = irt_effort*100, y = actual_effort*100), alpha = 0.5, size = 0.75) +
stat_lineribbon(aes(y = .epred*100), alpha = 0.8, .width = 0.95, fill = "grey") +
scale_y_continuous(limits = c(0,101), breaks = c(0,25,50,75,100)) +
scale_x_continuous(limits = c(0,101), breaks = c(0,25,50,75,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
subtitle = "Mixed Effects Ordered Beta Regression",
x = expression("E"[A(ji,IRT)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
comb_effort
comb_effort %>%
# data_grid(irt_effort = seq(from = 0, to = 1, length = 101), person) %>%
tidyr::expand(nesting(person),
irt_effort = seq(from = 0, to = 100, length = 101)) %>%
add_epred_draws(ordbeta_effort) %>%
ggplot(aes(x = irt_effort*100, y = actual_effort*100)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point(data = comb_effort, aes(x = irt_effort*100, y = actual_effort*100), alpha = 0.5, size = 0.75) +
stat_lineribbon(aes(y = .epred*100), alpha = 0.8, .width = 0.95, fill = "grey") +
scale_y_continuous(limits = c(0,101), breaks = c(0,25,50,75,100)) +
scale_x_continuous(limits = c(0,101), breaks = c(0,25,50,75,100)) +
labs(title = "Calculated Actual Effort and IRT (1PL) Estimated Actual Effort",
subtitle = "Mixed Effects Ordered Beta Regression",
x = expression("E"[A(ji,IRT)]~"(Actual effort estimated from IRT model; %)"),
y = expression("E"[A(ji)]~"(Actual effort calculated directly; %)")) +
theme_classic()
blogdown:::serve_site()
build_site(local = FALSE, run_hugo = TRUE,
build_rmd = FALSE, ...)
blogdown::build_site(local = FALSE, run_hugo = TRUE,
build_rmd = FALSE, ...)
blogdown::build_site(local = FALSE, run_hugo = TRUE,
build_rmd = FALSE)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
## Setup
library(tidyverse)
library(brms)
library(ordbetareg)
library(patchwork)
library(tidybayes)
setwd("C:/Users/James/Dropbox/Research/Understanding Effort - and other perceptual phenomena/Horme Lab/Website/horme-lab/content/post/IRT_actual_effort - real data/datasets/Westbrook et al. 2013")
# load and prepare data
nback_a_dat <- read.csv("2013_Nback_a.csv")
nback_b_dat <- read.csv("2013_Nback_b.csv")
nback_dat <- rbind(nback_a_dat, nback_b_dat) %>%
rename("person" = Subject,
"item" = stimcol,
"response" = TrialAcc) %>%
mutate(person = factor(person),
item = factor(item))
nback_dat$item <- recode(nback_dat$item, "black" = "1", "red" = "2", "blue" = "3", "purple" = "4", "yellow" = "5", "brown" = "6")
SV_dat <- read.csv("SVtbl.csv")
SV_dat <- SV_dat %>%
rename("person" = Subject,
"item" = Task) %>%
mutate(person = factor(person),
item = factor(item),
SV_effort = 1-SV)
AUC_dat <- read.csv("AUC_age_income_subjectiveReport.csv")
AUC_dat <- AUC_dat %>%
rename("person" = Subject) %>%
mutate(person = factor(person))
NASA_dat <- read.csv("NASA_TLX.csv")
NASA_dat <- NASA_dat %>%
rename("person" = Participant,
"item" = Task) %>%
mutate(person = factor(person),
item = factor(item))
NASA_dat$item <- recode(NASA_dat$item, "BLK" = "1", "RED" = "2", "BLU" = "3", "PRP" = "4")
## 1PL model
formula_1pl <- bf(
formula = response ~ 1 + (1 | item) + (1 | person),
family = brmsfamily("bernoulli", link = "logit")
)
prior_1pl <-
prior("normal(0, 2)", class = "Intercept") +
prior("normal(0, 3)", class = "sd", group = "person") +
prior("normal(0, 3)", class = "sd", group = "item")
fit_1pl <- brm(
formula = formula_1pl,
data = nback_dat,
prior = prior_1pl,
chains = 4,
iter = 3000, warmup = 1000,
cores = 4,
control = list(adapt_delta = 0.95), inits = 0
)
blogdown:::serve_site()
blogdown:::serve_site()
## Setup
library(tidyverse)
library(brms)
library(ordbetareg)
library(patchwork)
library(tidybayes)
setwd("C:/Users/James/Dropbox/Research/Understanding Effort - and other perceptual phenomena/Horme Lab/Website/horme-lab/content/post/2022-03-16-actual-effort-in-cognitive-tasks-pt-2/datasets/Westbrook et al. 2013")
# load and prepare data
nback_a_dat <- read.csv("2013_Nback_a.csv")
nback_b_dat <- read.csv("2013_Nback_b.csv")
nback_dat <- rbind(nback_a_dat, nback_b_dat) %>%
rename("person" = Subject,
"item" = stimcol,
"response" = TrialAcc) %>%
mutate(person = factor(person),
item = factor(item))
nback_dat$item <- recode(nback_dat$item, "black" = "1", "red" = "2", "blue" = "3", "purple" = "4", "yellow" = "5", "brown" = "6")
SV_dat <- read.csv("SVtbl.csv")
SV_dat <- SV_dat %>%
rename("person" = Subject,
"item" = Task) %>%
mutate(person = factor(person),
item = factor(item),
SV_effort = 1-SV)
AUC_dat <- read.csv("AUC_age_income_subjectiveReport.csv")
AUC_dat <- AUC_dat %>%
rename("person" = Subject) %>%
mutate(person = factor(person))
NASA_dat <- read.csv("NASA_TLX.csv")
NASA_dat <- NASA_dat %>%
rename("person" = Participant,
"item" = Task) %>%
mutate(person = factor(person),
item = factor(item))
NASA_dat$item <- recode(NASA_dat$item, "BLK" = "1", "RED" = "2", "BLU" = "3", "PRP" = "4")
## 1PL model
formula_1pl <- bf(
formula = response ~ 1 + (1 | item) + (1 | person),
family = brmsfamily("bernoulli", link = "logit")
)
prior_1pl <-
prior("normal(0, 2)", class = "Intercept") +
prior("normal(0, 3)", class = "sd", group = "person") +
prior("normal(0, 3)", class = "sd", group = "item")
fit_1pl <- brm(
formula = formula_1pl,
data = nback_dat,
prior = prior_1pl,
chains = 4,
iter = 3000, warmup = 1000,
cores = 4,
control = list(adapt_delta = 0.95), inits = 0
)
blogdown:::serve_site()
SV_effort_p
setwd("C:/Users/James/Dropbox/Research/Understanding Effort - and other perceptual phenomena/Horme Lab/Website/horme-lab/content/post/2022-03-16-actual-effort-in-cognitive-tasks-pt-2/datasets/Westbrook et al. 2013")
# load and prepare data
nback_a_dat <- read.csv("2013_Nback_a.csv")
nback_b_dat <- read.csv("2013_Nback_b.csv")
nback_dat <- rbind(nback_a_dat, nback_b_dat) %>%
rename("person" = Subject,
"item" = stimcol,
"response" = TrialAcc) %>%
mutate(person = factor(person),
item = factor(item))
nback_dat$item <- recode(nback_dat$item, "black" = "1", "red" = "2", "blue" = "3", "purple" = "4", "yellow" = "5", "brown" = "6")
SV_dat <- read.csv("SVtbl.csv")
SV_dat <- SV_dat %>%
rename("person" = Subject,
"item" = Task) %>%
mutate(person = factor(person),
item = factor(item),
SV_effort = 1-SV)
AUC_dat <- read.csv("AUC_age_income_subjectiveReport.csv")
AUC_dat <- AUC_dat %>%
rename("person" = Subject) %>%
mutate(person = factor(person))
NASA_dat <- read.csv("NASA_TLX.csv")
NASA_dat <- NASA_dat %>%
rename("person" = Participant,
"item" = Task) %>%
mutate(person = factor(person),
item = factor(item))
NASA_dat$item <- recode(NASA_dat$item, "BLK" = "1", "RED" = "2", "BLU" = "3", "PRP" = "4")
## 1PL model
formula_1pl <- bf(
formula = response ~ 1 + (1 | item) + (1 | person),
family = brmsfamily("bernoulli", link = "logit")
)
prior_1pl <-
prior("normal(0, 2)", class = "Intercept") +
prior("normal(0, 3)", class = "sd", group = "person") +
prior("normal(0, 3)", class = "sd", group = "item")
fit_1pl <- brm(
formula = formula_1pl,
data = nback_dat,
prior = prior_1pl,
chains = 4,
iter = 3000, warmup = 1000,
cores = 4,
control = list(adapt_delta = 0.95), inits = 0
)
post <- posterior_samples(fit_1pl)
post <- post %>%
select(b_Intercept, starts_with("r_item")) %>%
mutate(iter = 1:n()) %>%
pivot_longer(starts_with("r_item"), names_to = "item", values_to = "beta") %>%
mutate(item = str_extract(item, "\\d+"))
post_icc <- post %>%
tidyr::expand(nesting(iter, b_Intercept, item, beta),
theta = seq(from = -6, to = 6, length.out = 100)) %>%
mutate(p = inv_logit_scaled(b_Intercept + beta + theta)) %>%
group_by(theta, item) %>%
summarise(p = mean(p))
icc_p <- post_icc %>%
ggplot(aes(x = theta, y = p, color = item)) +
geom_line() +
# scale_color_viridis_d(option = "H") +
scale_color_manual(values = c("black", "red", "blue", "purple", "yellow", "brown")) +
labs(title = "ICCs for the 1PL",
subtitle = "Each curve is based on the posterior mean.",
x = expression(theta~('ability on the logit scale')),
y = expression(italic(p)(y==1)),
color = "Item (N-Back)") +
theme_classic() +
theme(legend.text = element_text(size = 8),
legend.title = element_text(size=10))
icc_p
# Pull ranef for person and item to calculate IRT efforts
rand <- ranef(fit_1pl)
rand_person <- data.frame(person = row.names(rand$person), rand$person)
rand_item <- as.data.frame(rand$item)
rand_item <- data.frame(beta = rep(rand_item$Estimate.Intercept, times = length(unique(nback_dat$person)))) %>%
mutate(item = as.factor(rep(1:length(unique(nback_dat$item)), times=length(unique(nback_dat$person)))),
person = rep(rand_person$person, each=length(unique(nback_dat$item)))) %>%
select(person, item, beta)
rand_all <- left_join(rand_person, rand_item, by = "person") %>%
rename(
theta = "Estimate.Intercept") %>%
mutate(beta = beta*-1,
irt_effort = if_else(exp(beta) > exp(theta), 1, (exp(beta)/exp(theta)))
)
# recombine with NASA, SV
comb_effort <- left_join(rand_all, NASA_dat, by = c("person", "item"))
comb_effort <- left_join(comb_effort, SV_dat, by = c("person", "item"))
# NASA_effort ~ IRT Effort
comb_effort <- comb_effort %>% # add upper and lower bounds manually so that data is normalised to them for ordbetareg
add_row(Effort = 0) %>%
add_row(Effort = 21)
ordbeta_NASA_effort <- ordbetareg(formula = Effort ~ irt_effort + (irt_effort | person),
data = comb_effort,
chains = 4,
iter = 3000, warmup = 1000,
cores = 4,
control = list(adapt_delta = 0.95), inits = 0)
ordbeta_NASA_effort_p <- comb_effort %>%
filter(Effort > 0) %>%
# data_grid(irt_effort = seq(from = 0, to = 1, length = 101), person) %>%
tidyr::expand(nesting(person),
irt_effort = seq(from = 0, to = 1, length = 101)) %>%
add_epred_draws(ordbeta_NASA_effort) %>%
ggplot(aes(x = irt_effort*100, y = .epred*100)) +
stat_lineribbon(aes(y = .epred*100, fill_ramp = stat(.width)), alpha = 0.8, .width = ppoints(50), fill = "grey") +
ggdist::scale_fill_ramp_continuous(range = c(1, 0)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "IRT (1PL) Estimated Effort and NASA-TLX Effort",
subtitle = "Mixed Effects Ordered Beta Regression",
y = "NASA-TLX Effort (Ordered Beta Transformation; %)",
x = expression("IRT Estimated Effort = exp("~beta~")/exp("~theta~")")) +
theme_classic()
ordbeta_NASA_effort_p
# SV ~ IRT Effort
comb_effort_SV <- comb_effort %>%
filter(!is.na(SV)) %>%
add_row(SV_effort = 0) %>%
add_row(SV_effort = 1)
ordbeta_SV_effort <- ordbetareg(formula = SV_effort ~ irt_effort + (irt_effort | person),
data = comb_effort,
chains = 4,
iter = 3000, warmup = 1000,
cores = 4,
control = list(adapt_delta = 0.95), inits = 0)
ordbeta_SV_effort_p <- comb_effort_SV %>%
filter(SV_effort > 0) %>%
# data_grid(irt_effort = seq(from = 0, to = 1, length = 101), person) %>%
tidyr::expand(nesting(person),
irt_effort = seq(from = 0, to = 1, length = 101)) %>%
add_epred_draws(ordbeta_SV_effort) %>%
ggplot(aes(x = irt_effort*100, y = .epred*100)) +
stat_lineribbon(aes(y = .epred*100, fill_ramp = stat(.width)), alpha = 0.8, .width = ppoints(50), fill = "grey") +
ggdist::scale_fill_ramp_continuous(range = c(1, 0)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,100)) +
labs(title = "IRT (1PL) Estimated Effort and Inverse Relative Subjective Value",
subtitle = "Mixed Effects Ordered Beta Regression",
y = "Subjective Effort Cost (%)",
x = expression("IRT Estimated Effort = exp("~beta~")/exp("~theta~")")) +
theme_classic()
ordbeta_SV_effort_p
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
