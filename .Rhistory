g2_m = V2)
sds <- as.data.frame(sds) %>%
rename(g1_sd = V1,
g2_sd = V2)
conf_int <- as.data.frame(conf_int) %>%
rename(upr = V1,
lwr = V2)
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
es_lwr = psych::cohen.d.ci(es, n1, n2)$lower,
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
nsims <- 1000 # number of simulation
n <- 15 # number of points per simulation
final.result <- matrix(NA, ncol = 1, nrow = nsims)
estimates <- matrix(NA, ncol = 2, nrow = nsims)
sds <- matrix(NA, ncol = 2, nrow = nsims)
conf_int <- matrix(NA, ncol = 2, nrow = nsims)
?t.test
for (i in 1:nsims) {
first.sample <- rnorm(n, mean = 100, sd = 10)
second.sample <- rnorm(n, mean = 104, sd = 10)
#   par(mfrow = c(1, 2))
#   hist(first.sample)
#   hist(second.sample)
result <- t.test(first.sample, second.sample, alternative = "two.sided")
final.result[i, ] <- result$p.value
estimates[i, ] <- result$estimate
sds[i,1] <-  sd(first.sample)
sds[i,2] <-  sd(second.sample)
conf_int[i,] <- result$conf.int
rm(result, first.sample, second.sample)
}
final.result <- as.data.frame(final.result) %>%
mutate(sim = seq(from = 1, to = 1000),
n1 = rep(n), n2 = rep(n)) %>%
rename(pval = V1)
estimates <- as.data.frame(estimates) %>%
rename(g1_m = V1,
g2_m = V2)
sds <- as.data.frame(sds) %>%
rename(g1_sd = V1,
g2_sd = V2)
conf_int <- as.data.frame(conf_int) %>%
rename(upr = V1,
lwr = V2)
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
es_lwr = psych::cohen.d.ci(es, n1, n2)$lower,
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
es_lwr = psych::cohen.d.ci(es, n1, n2),
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
psych::cohen.d.ci(es, n1, n2)[1,
psych::cohen.d.ci(es, n1, n2)[1,]
psych::cohen.d.ci(es, n1, n2)[1,]
psych::cohen.d.ci(es, 15, 15)[1,]
psych::cohen.d.ci(es, 15, 15)[,1]
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
es_lwr = psych::cohen.d.ci(es, n1, n2)[,1],
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
es_lwr = psych::cohen.d.ci(es, n1, n2)[,1],
es_upr = psych::cohen.d.ci(es, n1, n2)[,3],
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
dat %>%
ggplot(aes(x=reorder(sim,es) ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
geom_linerange(aes(ymin=es_lwr, ymax=upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank())
dat %>%
ggplot(aes(x=reorder(sim,es) ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank())
dat %>%
ggplot(aes(x=reorder(sim,es) ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted",
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted",
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank())
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
es_lwr = psych::cohen.d.ci(es, n1, n2, 0.05)[,1],
es_upr = psych::cohen.d.ci(es, n1, n2, 0.05)[,3],
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
dat %>%
ggplot(aes(x=reorder(sim,es) ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted",
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted",
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank())
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted",
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted",
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank())
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 2,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 2,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank())
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank()
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank())
sum(dat$pval < 0.05)
sum(dat$pval < 0.05)/1000
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30") +
theme(axis.text.x = element_blank())
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30")
dat1 <- subset(dat, sig_es_low = 1)
View(dat1)
dat1 <- subset(dat, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d)
dat1 <- subset(dat, es < pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d &
es > -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d)
sum(dat1$pval < 0.05)/1000
com_effort_p
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 500, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
annotate("text", 500, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30")
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 500, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = 0.1, vjust = 2, size = 2) +
annotate("text", 500, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30")
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 500, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = -2, size = 2) +
annotate("text", 500, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30")
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 400, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = -2, size = 2) +
annotate("text", 400, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 0.4, sample size = 30")
sum(dat$pval < 0.05)/1000
sum(dat$pval > 0.05)/1000
pwr::pwr.t.test(n = n, d = 0.4, power = NULL, sig.level = 0.05, type = "two.sample", alternative = "two.sided")
pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
for (i in 1:nsims) {
first.sample <- rnorm(n, mean = 100, sd = 10)
second.sample <- rnorm(n, mean = 110.59797, sd = 10)
#   par(mfrow = c(1, 2))
#   hist(first.sample)
#   hist(second.sample)
result <- t.test(first.sample, second.sample, alternative = "two.sided")
final.result[i, ] <- result$p.value
estimates[i, ] <- result$estimate
sds[i,1] <-  sd(first.sample)
sds[i,2] <-  sd(second.sample)
conf_int[i,] <- result$conf.int
rm(result, first.sample, second.sample)
}
final.result <- as.data.frame(final.result) %>%
mutate(sim = seq(from = 1, to = 1000),
n1 = rep(n), n2 = rep(n)) %>%
rename(pval = V1)
estimates <- as.data.frame(estimates) %>%
rename(g1_m = V1,
g2_m = V2)
sds <- as.data.frame(sds) %>%
rename(g1_sd = V1,
g2_sd = V2)
conf_int <- as.data.frame(conf_int) %>%
rename(upr = V1,
lwr = V2)
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
dat1 <- subset(dat, es < pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d &
es > -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d)
sum(dat$pval > 0.05)/1000
sum(dat$pval < 0.05)/1000
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
# geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 400, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = -2, size = 2) +
annotate("text", 400, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 1.06, sample size = 30")
nsims <- 1000 # number of simulation
n <- 15 # number of points per simulation
final.result <- matrix(NA, ncol = 1, nrow = nsims)
estimates <- matrix(NA, ncol = 2, nrow = nsims)
sds <- matrix(NA, ncol = 2, nrow = nsims)
conf_int <- matrix(NA, ncol = 2, nrow = nsims)
?t.test
for (i in 1:nsims) {
first.sample <- rnorm(n, mean = 100, sd = 10)
second.sample <- rnorm(n, mean = 110.59797, sd = 10)
#   par(mfrow = c(1, 2))
#   hist(first.sample)
#   hist(second.sample)
result <- t.test(first.sample, second.sample, alternative = "two.sided")
final.result[i, ] <- result$p.value
estimates[i, ] <- result$estimate
sds[i,1] <-  sd(first.sample)
sds[i,2] <-  sd(second.sample)
conf_int[i,] <- result$conf.int
rm(result, first.sample, second.sample)
}
final.result <- as.data.frame(final.result) %>%
mutate(sim = seq(from = 1, to = 1000),
n1 = rep(n), n2 = rep(n)) %>%
rename(pval = V1)
estimates <- as.data.frame(estimates) %>%
rename(g1_m = V1,
g2_m = V2)
sds <- as.data.frame(sds) %>%
rename(g1_sd = V1,
g2_sd = V2)
conf_int <- as.data.frame(conf_int) %>%
rename(upr = V1,
lwr = V2)
dat <- cbind(final.result, estimates, sds, conf_int) %>%
mutate(es = (g1_m - g2_m)/sqrt((g1_sd^2 + g2_sd^2)/2),
pwr = pwr::pwr.t.test(n = n, d = es, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$power,
sig_es_low = ifelse(pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
%<% es %<% -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d
& pval < 0.05, 1, 0))
dat1 <- subset(dat, es < pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d &
es > -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d)
sum(dat$pval < 0.05)/1000
n_30 <- dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
# geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 400, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = -2, size = 2) +
annotate("text", 400, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 1.06, sample size = 30")
n_30
dat %>%
ggplot(aes(x=sim ,y=es, color = pval < 0.05)) +
geom_hline(yintercept = 0, linetype = "dashed") +
# geom_hline(yintercept = 0.4) +
# geom_hline(yintercept = -0.4) +
geom_hline(linetype = "dotted", size = 1,
yintercept = pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
geom_hline(linetype = "dotted", size = 1,
yintercept = -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d) +
annotate("text", 400, pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = -1, size = 2) +
annotate("text", 400, -pwr::pwr.t.test(n = n, d = NULL, power = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")$d,
label = "Actual Effect Size Powered For", hjust = -0.1, vjust = 2, size = 2) +
geom_point(alpha = 0.5) +
# geom_linerange(aes(ymin=es_lwr, ymax=es_upr), size=0.5, alpha=0.5) +
# scale_y_continuous(limits = c(-2,1), breaks = c(-2,-1.5,-1,-0.5,0,0.5,1)) +
# scale_y_continuous(limits = c(-20,20)) +
labs(x = "Simulation",
y = "Effect Size",
color = "p < 0.05",
title = "True effect = 1.06, sample size = 30")
pp_check(brm_SV_effort)
pp_check(brm_effort)
brm_effort
plot(brm_effort)
install.packages("ordbetareg")
